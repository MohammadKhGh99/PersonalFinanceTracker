name: Personal Finance Tracker Service Deployment Dev

on:
  push:
    branches:
      - dev

env:
  SQS_QUEUE_NAME: ${{ secrets.SQS_QUEUE_NAME }}


jobs:
  FinanceBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # finance_tracker
      - name: Build and push image if app.py was modified
        run: |
          OUTPUT=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -w 'app.py' | grep 'PersonalFinanceTracker/app.py' || echo "no-match")
          echo "OUTPUT: $OUTPUT"
          if [ "$OUTPUT" == "no-match" ]; then
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

            IMAGE_NAME=finance_tracker:0.0.${{ github.run_number }}
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            echo "Docker image pushed successfully."

            sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/finance_tracker:.*|${{IMAGE_NAME}}|" k8s/finance-tracker-deployment.yaml
            echo "Updated finance-tracker-deployment.yaml successfully."
          else
            echo "No changes detected in PersonalFinanceTracker/app.py. Skipping Docker build."
          fi


      # category_service
      - name: Check if category/ was modified
        run: |
          OUTPUT=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'category/' || echo "no-match")
          if [ "$OUTPUT" == "no-match" ]; then
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

            IMAGE_NAME=finance_tracker_category_service:0.0.${{ github.run_number }}
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            echo "Docker image pushed successfully."

            sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/finance_tracker_category_service:.*|${{IMAGE_NAME}}|" k8s/category-service-deployment.yaml
            echo "Updated category-service-deployment.yaml successfully."
          else
            echo "No changes detected in category. Skipping Docker build."
          fi


      # transaction_service
      - name: Check if transaction/ was modified
        run: |
          OUTPUT=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'transaction/' || echo "no-match")
          if [ "$OUTPUT" == "no-match" ]; then
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          
            IMAGE_NAME=finance_tracker_transaction_service:0.0.${{ github.run_number }}
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            echo "Docker image pushed successfully."

            sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/finance_tracker_transaction_service:.*|${{IMAGE_NAME}}|" k8s/transaction-service-deployment.yaml
            echo "Updated transaction-service-deployment.yaml successfully."
          else
            echo "No changes detected in transaction/. Skipping Docker build."
          fi

      
      # users_management_service
      - name: Check if users/ was modified
        run: |
          OUTPUT=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'users/' || echo "no-match")

          if [ "$OUTPUT" == "no-match" ]; then
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

            IMAGE_NAME=finance_tracker_users_service:0.0.${{ github.run_number }}
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            echo "Docker image pushed successfully."

            sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/finance_tracker_users_service:.*|${{IMAGE_NAME}}|" k8s/users-service-deployment.yaml
            echo "Updated users-service-deployment.yaml successfully."
          else
            echo "No changes detected in users/. Skipping Docker build."
          fi

      
      # reports_service
      - name: Check if reports/ was modified
        run: |
          OUTPUT=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'reports/' || echo "no-match")
          if [ "$OUTPUT" == "no-match" ]; then
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

            IMAGE_NAME=finance_tracker_reports_service:0.0.${{ github.run_number }}
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
            echo "Docker image pushed successfully."

            sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/finance_tracker_reports_service:.*|${{IMAGE_NAME}}|" k8s/reports-service-deployment.yaml
            echo "Updated reports-service-deployment.yaml successfully."
          else
            echo "No changes detected in reports/. Skipping Docker build."
          fi


  # FinanceDeploy:
  #   runs-on: ubuntu-latest
  #   needs: FinanceBuild
  #   steps:
  #     - name: Checkout the repo code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0  # Fetch all history for all branches and tags

  #     - name: Deploy finance_tracker
  #       run: |
  #         kubectl apply -f k8s/finance-tracker-deployment.yaml
  #         echo "Finance Tracker deployed successfully."

  #     - name: Deploy category_service
  #       run: |
  #         kubectl apply -f k8s/category-service-deployment.yaml
  #         echo "Category Service deployed successfully."

  #     - name: Deploy transaction_service
  #       run: |
  #         kubectl apply -f k8s/transaction-service-deployment.yaml
  #         echo "Transaction Service deployed successfully."

  #     - name: Deploy users_management_service
  #       run: |
  #         kubectl apply -f k8s/users-service-deployment.yaml
  #         echo "Users Management Service deployed successfully."

  #     - name: Deploy reports_service
  #       run: |
  #         kubectl apply -f k8s/reports-service-deployment.yaml
  #         echo "Reports Service deployed successfully."

      
          
